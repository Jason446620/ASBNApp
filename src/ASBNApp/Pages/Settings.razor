@page "/settings"

@inject IASBNDataService dataService;
@using ASBNApp.Model;


<PageTitle>Settings</PageTitle>

<div class="container-fluid">
    @* Header with username *@
    <div class="row justify-content-between align-items-center">
        <div class="col-md-auto">
            @* required for the output pdf *@
            <HeaderLarge Header="Hi {username}!" />
        </div>
    </div>

    @* Choose your apprenticeship from a pre-defined list *@
    <div class="row mt-4">
        <p>Your apprenticeship:</p>
        <div class="select-location-dropdown">
            <select name="work-location" id="work-location" @bind="selectedApprenticeship">
                <option value="" disabled selected>Select Apprenticeship </option>

                @foreach (var entry in Data.Professions.Apprenticeships) {
                    <option value="@entry"> @entry </option>
                }
            </select>
        </div>
    </div>

    @* Specify your working locations and the hours for each location *@
    <div class="row mt-4">
        <p>Your working hours:</p>
        @foreach (var entry in workLocationHours) {
            <div class="row mt-1">
                <div class="col-auto">
                    <input type="text" @bind="entry.Location" />
                    <input type="text" @bind="entry.Hours" />
                    <span class="material-symbols-rounded">edit</span>
                </div>
            </div> 
        }
        <div class="row mt-1">
            <div class="col">
                <input type="text" placeholder="Add new working location"/>
                <input type="text" placeholder="Add working hours"/>
                <span class="material-symbols-rounded">add</span>
            </div>
        </div> 
    </div>

    @* Specify your legal representative (if applicable) *@
    <div class="row mt-4">
        <p>Your legal representative (if you're under 18!):</p>
        <div class="col-4">
            <input type="text" placeholder="Your mama!" @bind="legalRepresentitive" />
            <span class="material-symbols-outlined">edit</span>
        </div>
    </div>

    @* Add company name here, required for the output pdf *@
    <div class="row mt-4">
        <p>The company you're working at:</p>
        <div class="col-4">
            <input type="text" placeholder="Telekom" @bind="company" />
            <span class="material-symbols-outlined">edit</span>
        </div>
    </div>

    @* Add school name here, required for the output pdf *@
    <div class="row mt-4">
        <p>Your school:</p>
        <div class="col-4">
            <input type="text" placeholder="BSZ ET Dresden" @bind="school" />
            <span class="material-symbols-outlined">edit</span>
        </div>
    </div>

</div>


@code {
    public ASBNApp.Model.Settings? settings { get; set; }
    public List<WorkLocationHours> workLocationHours = new();
    public Data.Professions Professions = new Data.Professions();
    public string? username;
    public string? selectedApprenticeship;
    public string? legalRepresentitive;
    public string? company;
    public string? school;

    

    // Get settings object with JSON data on initialization
    protected override void OnInitialized()
    {
        LoadSettingsData();
        LoadWorkLocationHoursData();
    }

    // load settings data
    public void LoadSettingsData() {
        try 
        {
            settings = dataService.GetSettings();
            // set variables
            username = settings.Username;
            selectedApprenticeship = settings.Profession;
            legalRepresentitive = settings.LegalRepresentitive;
            company = settings.Company;
            school = settings.School;
        }
        catch (NullReferenceException e)
        {
            Console.WriteLine(e.Message + " Load JSON file before trying to read values for settings.");
        }
    }

    // load work location data
    public void LoadWorkLocationHoursData() {
        try 
        {
            workLocationHours = dataService.GetWorkLocationHours();
        }
        catch (NullReferenceException e)
        {
            Console.WriteLine(e.Message + " Load JSON file before trying to read values for work location data.");
        }
    }
}
