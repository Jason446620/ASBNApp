@*
UI bit that represents a single entry, supposed to be used in MainViewWeek.
Created 20.10.2023
*@

@using ASBNApp.Model;
@inject IASBNDataService dataService;

<div class="row mb-3">


    <div class="col-2 entry-row entry-row-date align-items-center justify-content-between">
        <p class="m-0"> @Entry.Date.DayOfWeek,</p>
        <input type="date" id="date" @bind="Entry.Date" min="@_minDateValue" max="@_maxDateValue" />
    </div>

    <div class="col mx-4 p-0 entry-row entry-row-note">
        <div class="form-group">
            <textarea class="form-control" rows="2" id="notes"
                placeholder="I did learn something... Forget what though." @bind="Entry.Note"></textarea>
        </div>
    </div>

    <div class="col-auto entry-row entry-row-location align-items-center justify-content-center">
        <div class="select-location-dropdown">
            <select name="work-location" id="work-location" @bind="Entry.Location">
                <option value="" disabled selected>Select location</option>

                @if (dataService.GetWorkLocationHours().Count != 0)
                {
                    @foreach (var entry in dataService.GetWorkLocationHours())
                    {
                        <option value="@entry.Location"> @entry.Location</option>
                    }
                }
                else
                {
                    <option value="" disabled>No data loaded, please select a file.</option>
                }

            </select>
        </div>
    </div>

</div>



@code {
    // dealing with two way binding
    [Parameter]
    public EntryRowModel Entry { get; set; }

    [Parameter]
    public EventCallback<EntryRowModel> OnUpdate { get; set; }

    // Week & year variables to set min and max values for
    private int? _selectedWeek;
    [Parameter]
    public int? SelectedWeek
    {
        get => _selectedWeek;
        set
        {
            _selectedWeek = value;
            UpdateMinMaxDates();
        }
    }

    private int? _selectedYear;
    [Parameter]
    public int? SelectedYear
    {
        get => _selectedYear;
        set
        {
            _selectedYear = value;
            UpdateMinMaxDates();
        }
    }


    DateHandler dateHandler = new DateHandler();

    // min & max values
    private string? _minDateValue = null;
    private string? _maxDateValue = null;

    protected override void OnInitialized()
    {
        UpdateMinMaxDates();
    }

    private void UpdateMinMaxDates()
    {
        if (SelectedWeek != null && SelectedYear != null)
        {
            // set values for min and max in the date picker
            _minDateValue = dateHandler.GetFirstDateOfWeek((int)SelectedWeek, (int)SelectedYear).ToString("yyyy-MM-dd");
            _maxDateValue = dateHandler.GetLastDateOfWeek((int)SelectedWeek, (int)SelectedYear).ToString("yyyy-MM-dd");
        }
    }
}