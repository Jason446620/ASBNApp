@* 
Main view to input and edit data, displayed when the user selects the daily view. 
Created 13.10.2023
*@

@inject IASBNDataService dataService;

<div class="container-fluid mt-3 p-0">

    <p class="my-2">I'm writing a log for...</p>
    <PillSelectorDate @bind-SelectedDate="SelectedDate" />

    <p class="my-2 mt-4">I was working from...</p>
    <PillSelectorLocation @bind-SelectedLocation="SelectedLocation" />

    <p class="my-2 mt-4">And I did this today...</p>
    <div class="form-group">
        <textarea class="form-control" rows="10" id="notes" placeholder="I did learn something... Forget what though." @bind="Note"></textarea>
    </div>

    <div class="row justify-content-end">
        <div class="col-auto">
            <button class="btn btn-dark mt-4" type="submit" @onclick="SaveData">Save</button>
        </div>
    </div>

    
</div>



@code {
    // Variables to bind the selected Date to:
    private DateTime _selectedDate = DateTime.Today;
    public DateTime SelectedDate 
    {
        get => _selectedDate;
        set {
            if (value != _selectedDate) 
            {
                _selectedDate = value;
                GetDataFromDate();
            }
        }
    } 

    // Variables to bind the selected work location to:
    public string? SelectedLocation = null;

    // Variable for storing the text the user put in
    public  string? Note = null;

    


    // Gets data for the SelectedDate
    // TODO: Add some note if no data is present -> or prevent the button being clicked in the first place!
    public async void GetDataFromDate() {
        // Check if data present, if not create an empty EntryRowModel
        var retrievedData = dataService.GetDay(SelectedDate);
        // Set variables
        Note = retrievedData.Note;
        SelectedLocation = retrievedData.Location;
    }

    // Save data
    public async void SaveData() {
        await dataService.SaveDay(SelectedDate, SelectedLocation, Note);
    }    
}