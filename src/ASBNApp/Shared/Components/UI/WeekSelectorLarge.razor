@* 
Large picker to select the week we want to edit.
Created 16.10.2023
*@

<div class="row my-4 mx-0 justify-content-center">

    <div class="col-auto week-change-button mb-2" @onclick="SelectPreviousWeek">
        <p class="m-0 material-symbols-outlined align-self-center"> chevron_left </p>
    </div>

    <div class="col-auto px-3 mx-3 mb-2 text-center week-change-center">
        <label for="week">Select week:</label>
        @* TODO: @onfocusout might not be the best idea, there might be a better way to do this *@
        <input type="week" id="week" @bind="_weekFormatInput" @onfocusout="UpdateWeekFromSelector" />
    </div>

    <div class="col-auto week-change-button mb-2" @onclick="SelectNextWeek">
        <p class="m-0 material-symbols-outlined align-self-center"> chevron_right </p>
    </div>

</div>


@code {
    //Two way binding paramters
    [Parameter]
    public int? SelectedWeek { get; set; }
    [Parameter]
    public EventCallback<int?> SelectedWeekChanged { get; set; }
    [Parameter]
    public int? SelectedYear { get; set; }
    [Parameter]
    public EventCallback<int?> SelectedYearChanged { get; set; }

    // Callback function
    [Parameter]
    public Func<Task> OnCallback { get; set; }


    DateHandler dateHandler = new DateHandler();
    private string? _weekFormatInput = null;
    
    // Use onInitialized() to assign calculated values to the matching variables, avoids data not being loaded into memory
    // Also make sure to update the week number on the parent component
    protected override void OnInitialized()
    {
        SelectedWeek = dateHandler.GetCurrentWeekOfYear();
        SelectedYear = DateTime.Now.Year;
        TriggerAllCallbacks();
        // Set value for HTML week input
        _weekFormatInput = SelectedYear + "-W" + SelectedWeek;
    }

    // Single place to trigger the callbacks
    public async void TriggerAllCallbacks() 
    {
        await SelectedWeekChanged.InvokeAsync(SelectedWeek);
        await SelectedYearChanged.InvokeAsync(SelectedYear);
        // Callback to the parent component
        await OnCallback.Invoke();
    }

    // Required function to update the CurrentWeek number if the user selects
    // a week through the HTML input
    public void UpdateWeekFromSelector() 
    {
        // Extract year and week from the WeekFormatInput string
        SelectedWeek = int.Parse(_weekFormatInput.Substring(6));
        SelectedYear = int.Parse(_weekFormatInput.Substring(0, 4));
        TriggerAllCallbacks();
    }


    // Updates the week number and the formatted week number for the selector
    // Take into account that we need to switch from 52 to 1 on week numbers and
    // to the next/previous year
    // Also update the binded values
    public void SelectNextWeek() 
    {
        if (SelectedWeek == 52) 
        {
            SelectedWeek = 1;
            SelectedYear++;
        } 
        else 
        {
            SelectedWeek++;
        }
        TriggerAllCallbacks();

        // Add a 0 to the string if SelectedWeek is one digit
        if(SelectedWeek < 10) 
        {
            _weekFormatInput = SelectedYear + "-W0" + SelectedWeek;
        } 
        else
        {
            _weekFormatInput = SelectedYear + "-W" + SelectedWeek;
        }
    }

    public void SelectPreviousWeek() 
    {
        if (SelectedWeek == 01) 
        {
            SelectedWeek = 52;
            SelectedYear--;
        } 
        else 
        {
            SelectedWeek--;
        }

        TriggerAllCallbacks();
        
        // Add a 0 to the string if SelectedWeek is one digit
        if(SelectedWeek < 10)
        {
            _weekFormatInput = SelectedYear + "-W0" + SelectedWeek;
        }
        else
        {
            _weekFormatInput = SelectedYear + "-W" + SelectedWeek;
        }
    }
}