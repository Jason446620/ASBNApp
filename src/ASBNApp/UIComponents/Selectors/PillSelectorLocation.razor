@* 
Simple component to select a location, should get it's values from the database at some point. 
*@

@using ASBNApp.Model;
@inject IASBNDataService dataService;

<div class="row mx-0 justify-content-start align-items-center">

    @if(dataService.GetWorkLocationHours().Count != 0) {
        @foreach (var entry in dataService.GetWorkLocationHours())
        {
            <div 
                class="col-auto me-2 mb-2 pill-selector-location @(SelectedLocation == entry.Location ? "active" : "")" 
                @onclick="@(e => { SelectedLocation = entry.Location; SelectedLocationChanged.InvokeAsync(SelectedLocation); })"
                tabindex="0">
                
                <p class="m-0"> @entry.Location </p>
            </div>
        }
    }
    else
    {
        <p class="info-highlight d-flex p-2">
            <svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 -960 960 960" width="24"><path fill="red" d="M109-120q-11 0-20-5.5T75-140q-5-9-5.5-19.5T75-180l370-640q6-10 15.5-15t19.5-5q10 0 19.5 5t15.5 15l370 640q6 10 5.5 20.5T885-140q-5 9-14 14.5t-20 5.5H109Zm69-80h604L480-720 178-200Zm302-40q17 0 28.5-11.5T520-280q0-17-11.5-28.5T480-320q-17 0-28.5 11.5T440-280q0 17 11.5 28.5T480-240Zm0-120q17 0 28.5-11.5T520-400v-120q0-17-11.5-28.5T480-560q-17 0-28.5 11.5T440-520v120q0 17 11.5 28.5T480-360Zm0-100Z" /></svg>
            <i>&nbsp; No data available, please add new work location in settings.</i>
        </p>
    }
    

</div>

@code {
    [Parameter]
    public string? SelectedLocation { get; set; }
    [Parameter]
    public EventCallback<string?> SelectedLocationChanged { get; set; }
}
